# CI de Nível 03 -  Execução por Deploy
# Este workflow é disparado após a conclusão do workflow "Execução Manual"

# nome do nosso 'pipeline'
name: "Execução por Deploy "

# regras de disparo (gatilho/trigger)
# gatilho de exec manual = workflow_dispatch
# gatilho de exec após o workflow "Execução Manual" ser concluído
 
on:
  workflow_run:
    workflows: ["Execução Manual"]
    types:
      - completed # Este tipo indica que o workflow "Execução Manual" foi concluído
# Outros tipos possíveis:
# - requested: quando o workflow é solicitado
# - in_progress: quando o workflow está em andamento
# - completed: quando o workflow é concluído (com sucesso ou falha)
# - failure: quando o workflow falha
# - success: quando o workflow é concluído com sucesso
# - cancelled: quando o workflow é cancelado    

# condicional - if
# Se o workflow "Execução Manual" foi concluído com sucesso, então executa este workflow
# `${github.event.workflow_run.conclusion} == 'success'`


  # trabalhos/tarefas dentro do pipeline = jobs
jobs:
  e2e-tests: #criação do jobs

  #maquina que o job vai executar, outras procurar em actions/runner-images 
    runs-on: ubuntu-latest

  # passos que o job vai executar
    steps: 
    
    # clone do projeto
    - name: Checkout code
      uses: actions/checkout@v2
    # instalação do Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '22.x' # ou a versão que você preferir
    # instalação do yarn
    - name: Install Yarn
      run: npm install -g yarn

    # instalação das dependências do projeto
    - name: Install dependencies
      run: yarn

    # instalação do playwright
    - name: Install Playwright
      run: yarn playwright install
       
    # execução dos testes e2e
    - name: Run E2E tests
      run: yarn run e2e

 # --- NOVA ACTION PARA PUBLICAR O RESUMO DOS TESTES (JUnit) ---
    # AGORA USANDO: EnricoMi/publish-unit-test-result-action
    - name: Publish Test Results (JUnit)
      uses: EnricoMi/publish-unit-test-result-action@v2 # <-- USAR ESTA ACTION
      if: always() # Garante que os resultados serão publicados mesmo se os testes falharem
      with:
        files: ./results.xml # O caminho para o seu arquivo JUnit XML. A action entende o formato JUnit.
        name: Playwright E2E Test Summary # Nome que aparecerá na aba "Tests"
        # Não precisa de 'reporter:' para esta action, ela é feita para JUnit XML


    # --- NOVA ACTION 2: Publica o Relatório HTML Completo do Playwright como Artefato ---
    # Isso permitirá que você baixe o relatório HTML interativo completo
    - name: Upload Playwright HTML Report
      uses: actions/upload-artifact@v4
      if: always() # Garante que o relatório será carregado mesmo se os testes falharem
      with:
        name: playwright-html-report # Nome do artefato
        path: playwright-report # O diretório onde o Playwright salva o relatório HTML
        retention-days: 5 # Opcional: quantos dias o artefato deve ser mantido (padrão é 90)

    # --- NOVA ACTION 3: Publica os Resultados dos Testes E2E como Artefato ---
    # Isso permitirá que você baixe os resultados dos testes E2E como um artef
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled()}}
      # Outros status podem ser: success(), failure(), always()
      with:
        name: relatorio-e2e # Nome do artefato
        path: ./playwright-report # O caminho para o diretório com os resultados dos testes E2E
